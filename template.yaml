# Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  AWS Backup DynamoDB Rotator
  
  The AWS Backup/DynamoDB Rotator ("the app") restores DynamoDB backups to a new timestamped table based on patterns you specify. The app subscribes to an existing SNS topic where AWS Backup publishes its event notifications. When a BACKUP_JOB_COMPLETE event is received for a DynamoDB table matching a pattern you specify, an AWS Step Functions state machine execution begins that restores the backup to a new table.

Metadata:
  AWS::ServerlessRepo::Application:
    Name: AWS-Backup-DynamoDB-Rotator
    Description: The AWS Backup DynamoDB Rotator restores DynamoDB backups to a new timestamped table based on patterns you specify.
    Author: Rob Sutter
    SpdxLicenseId: Apache-2.0
    LicenseUrl: LICENSE
    ReadmeUrl: README.md
    Labels: ['Backup', 'Restore', 'DynamoDB', 'Rotator', 'Disaster', 'Recovery', 'DR', 'BC', 'Operations', 'Automation']
    HomePageUrl: https://github.com/awslabs/aws-backup-dynamodb-rotator
    SemanticVersion: 0.1.0
    SourceCodeUrl: https://github.com/awslabs/aws-backup-dynamodb-rotator

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Runtime: go1.x
    Timeout: 10
    Tracing: Active # https://docs.aws.amazon.com/lambda/latest/dg/lambda-x-ray.html

Parameters:
  BackupSNSTopicARN:
    Type: String
    Description: The ARN for a previously existing SNS topic to which AWS Backup publishes its notifications. The Step Function will subscribe to this topic and begin execution when a "BACKUP_JOB_COMPLETED" notification is published.
    AllowedPattern: "^arn:aws:sns:[a-zA-Z0-9_.-]+:[0-9]{12}:[a-zA-Z0-9_.-]+"
  SourcePattern:
    Type: String
    Description: A regular expression matching the table name - not full ARN - of resources to be restored, e.g., "(?i)-production$" (without the double quotes) for all DynamoDB tables ending with "-production" (case insensitive). If no expression is provided, all DynamoDB tables will be restored. Currently only DynamoDB tables are supported.
    Default: ".*"
  ReplacementPattern:
    Type: String
    Description: A replacement expression used to name the restored resource given in the format, e.g., "-staging" (without the double quotes) to replace the given SourcePatternParameter with "-staging" in the newly restored instance. A date time stamp of the format "-20060102-15-04-05" (-YYYYMMDD-HH-mm-ss) will be appended to the replacement name in all cases. If no expression is provided, the restored resource will bear the name of the original resource with the date time stamp appended, i.e., use "$0" as the replacement expression.
    Default: "$0"
  SSMParameterName:
    Type: String
    Description: The name and path of an AWS Systems Manager (SSM) Parameter Store parameter to be created or updated with the ARN of the newly restored database, e.g., "/service/staging-database-arn" (without the double quotes). This is useful for automating reporting, staging, and test database rollover. This parameter is optional, and if no value is provided no parameter will be created or updated.
    Default: ""

Resources:
  AWSBackupSNSSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint:
        !GetAtt StartStateMachineFunction.Arn
      FilterPolicy: 
        |-
        {
          "EventType": [
            "BACKUP_JOB"
          ],
          "State": [
            "COMPLETED"
          ]
        }
      Protocol: lambda
      TopicArn:
        Ref: BackupSNSTopicARN
  
  SNSLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn:
        Ref: BackupSNSTopicARN
      FunctionName:
        !GetAtt StartStateMachineFunction.Arn

  StartStateMachineFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: ./bin/start-workflow/
      Environment:
        Variables:
          STATE_MACHINE_ARN:
            Ref: DynamoDBCloneRotator
          SOURCE_PATTERN:
            Ref: SourcePattern
          REPLACEMENT_PATTERN:
            Ref: ReplacementPattern
          SSM_PARAMETER_NAME:
            Ref: SSMParameterName
      Handler: start-workflow
      Role:
        !GetAtt StartStateMachineFunctionRole.Arn

  DynamoDBCloneRotator:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      DefinitionString:
        !Sub
          - |-
            {
              "Comment": "The DynamoDB Clone Rotator creates a DynamoDB table from a backup created by AWS Backup.",
              "StartAt": "Restore Backup",
              "States": {
                "Restore Backup": {
                  "Type": "Task",
                  "Resource": "${restoreBackupArn}",
                  "ResultPath": "$.RestoreTableFromBackupOutput",
                  "Next": "SSM Parameter Provided ?"
                },
                "SSM Parameter Provided ?": {
                  "Type": "Choice",
                  "Choices": [
                    {
                      "Not": {
                        "Variable": "$.SSMParameterName",
                        "StringEquals": ""
                      },
                      "Next": "Wait for Restore"
                    }
                  ],
                  "Default": "Complete"
                },
                "Wait for Restore": {
                  "Type": "Wait",
                  "Seconds": 60,
                  "Next": "Check Restore Status"
                },
                "Check Restore Status": {
                  "Type": "Task",
                  "Resource": "${checkRestoreStatusArn}",
                  "InputPath": "$.RestoreTableFromBackupOutput",
                  "ResultPath": "$.DescribeTableOutput",
                  "Next": "Restore Complete?"
                },
                "Restore Complete?": {
                  "Type": "Choice",
                  "Choices": [
                    {
                      "Variable": "$.DescribeTableOutput.Table.TableStatus",
                      "StringEquals": "ACTIVE",
                      "Next": "Update SSM Parameter"
                    },
                    {
                      "Or": [
                        {
                          "Variable": "$.DescribeTableOutput.Table.TableStatus",
                          "StringEquals": "CREATING"
                        },
                        {
                          "Variable": "$.DescribeTableOutput.Table.TableStatus",
                          "StringEquals": "UPDATING"
                        }
                      ],
                      "Next": "Wait for Restore"
                    }
                  ],
                  "Default": "Error"
                },
                "Update SSM Parameter": {
                  "Type": "Task",
                  "Resource": "${updateSSMParameterArn}",
                  "ResultPath": "$.UpdateSSMParameterOutput",
                  "Next": "Complete"
                },
                "Complete": {
                  "Type": "Succeed"
                },
                "Error": {
                  "Type": "Fail"
                }
              }
            }
          - {
              checkRestoreStatusArn: !GetAtt CheckRestoreStatusFunction.Arn,
              restoreBackupArn: !GetAtt RestoreBackupFunction.Arn,
              updateSSMParameterArn: !GetAtt UpdateSSMParameterFunction.Arn
            }
      RoleArn:
        !GetAtt StatesExecutionRole.Arn
      StateMachineName: DynamoDBCloneRotator
  
  CheckRestoreStatusFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: ./bin/check-restore-status/
      Handler: check-restore-status
      Role:
        !GetAtt CheckRestoreStatusFunctionRole.Arn

  RestoreBackupFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: ./bin/restore-backup/
      Handler: restore-backup
      Role:
        !GetAtt RestoreBackupFunctionRole.Arn

  UpdateSSMParameterFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: ./bin/update-ssm-parameter/
      Handler: update-ssm-parameter
      Role:
        !GetAtt UpdateSSMParameterFunctionRole.Arn

# IAM Roles
  StartStateMachineFunctionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - !Sub lambda.amazonaws.com
            Action: "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: StartStateMachineFunctionExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "states:StartExecution"
                Resource:
                  - Ref: DynamoDBCloneRotator

  StatesExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - !Sub states.${AWS::Region}.amazonaws.com
            Action: "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: DynamoDBCloneRotatorStatesExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "lambda:InvokeFunction"
                Resource: 
                  - !GetAtt CheckRestoreStatusFunction.Arn
                  - !GetAtt RestoreBackupFunction.Arn
                  - !GetAtt UpdateSSMParameterFunction.Arn
  
  CheckRestoreStatusFunctionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - !Sub lambda.amazonaws.com
            Action: "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: CheckRestoreStatusFunctionExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "dynamodb:DescribeTable"
                Resource:
                  - "*"

  RestoreBackupFunctionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - !Sub lambda.amazonaws.com
            Action: "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: RestoreBackupFunctionExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "dynamodb:BatchWriteItem"
                  - "dynamodb:DeleteItem"
                  - "dynamodb:GetItem"
                  - "dynamodb:PutItem"
                  - "dynamodb:Query"
                  - "dynamodb:RestoreTableFromBackup"
                  - "dynamodb:Scan"
                  - "dynamodb:UpdateItem"
                Resource:
                  - "*"

  UpdateSSMParameterFunctionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - !Sub lambda.amazonaws.com
            Action: "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: UpdateSSMParameterFunctionExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ssm:PutParameter"
                Resource:
                  - "*"

Outputs:
  StartStateMachineFunction:
    Description: "StartStateMachine Lambda Function ARN"
    Value:
      !GetAtt StartStateMachineFunction.Arn
