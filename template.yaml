# Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  AWS Backup DynamoDB Rotator
  
  The AWS Backup/DynamoDB Rotator ("the app") restores DynamoDB backups to a new timestamped table based on patterns you specify. The app subscribes to an existing SNS topic where AWS Backup publishes its event notifications. When a BACKUP_JOB_COMPLETE event is received for a DynamoDB table matching a pattern you specify, an AWS Step Functions state machine execution begins that restores the backup to a new table.

Metadata:
  AWS::ServerlessRepo::Application:
    Name: AWS-Backup-DynamoDB-Rotator
    Description: The AWS Backup DynamoDB Rotator restores DynamoDB backups to a new timestamped table based on patterns you specify.
    Author: Rob Sutter
    SpdxLicenseId: Apache-2.0
    LicenseUrl: LICENSE
    ReadmeUrl: README.md
    Labels: ['Backup', 'Restore', 'DynamoDB', 'Rotator', 'Disaster', 'Recovery', 'DR', 'BC', 'Operations', 'Automation']
    HomePageUrl: https://github.com/awslabs/aws-backup-dynamodb-rotator
    SemanticVersion: 0.2.0
    SourceCodeUrl: https://github.com/awslabs/aws-backup-dynamodb-rotator

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Runtime: go1.x
    Timeout: 10
    Tracing: Active # https://docs.aws.amazon.com/lambda/latest/dg/lambda-x-ray.html

Parameters:
  BackupSNSTopicARN:
    Type: String
    Description: The ARN of an SNS topic to subscribe to for AWS Backup events.
    AllowedPattern: "^arn:aws:sns:[a-zA-Z0-9_.-]+:[0-9]{12}:[a-zA-Z0-9_.-]+"
    ConstraintDescription: The BackupSNSTopicARN parameter must be a properly formed ARN.
  SourcePattern:
    Type: String
    Description: A regular expression matching the table name to be restored.
    Default: "(?i)-production$"
    AllowedPattern: ^\S+$
    ConstraintDescription: The SourcePattern parameter may not be an empty string.
  ReplacementPattern:
    Type: String
    Description: A replacement expression used to name the restored table.
    Default: "-staging"
    AllowedPattern: ^\S+$
    ConstraintDescription: The ReplacementPattern parameter may not be an empty string.
  SSMParameterName:
    Type: String
    Description: The name and path of an SSM parameter to be created or updated.
    Default: "/staging/database-arn"

Resources:
  AWSBackupSNSSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint:
        !GetAtt StartStateMachineFunction.Arn
      FilterPolicy: 
        |-
        {
          "EventType": [
            "BACKUP_JOB"
          ],
          "State": [
            "COMPLETED"
          ]
        }
      Protocol: lambda
      TopicArn:
        Ref: BackupSNSTopicARN
  
  SNSLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn:
        Ref: BackupSNSTopicARN
      FunctionName:
        !GetAtt StartStateMachineFunction.Arn

  StartStateMachineFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: functions/start-workflow/
      Handler: start-workflow
      Environment:
        Variables:
          STATE_MACHINE_ARN:
            Ref: DynamoDBCloneRotator
          SOURCE_PATTERN:
            Ref: SourcePattern
          REPLACEMENT_PATTERN:
            Ref: ReplacementPattern
          SSM_PARAMETER_NAME:
            Ref: SSMParameterName
      Policies:
        - StepFunctionsExecutionPolicy:
            StateMachineName: !GetAtt DynamoDBCloneRotator.Name

  DynamoDBCloneRotator:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: statemachine/restore-backup.asl.json
      DefinitionSubstitutions:
        checkRestoreStatusArn: !GetAtt CheckRestoreStatusFunction.Arn
        restoreBackupArn: !GetAtt RestoreBackupFunction.Arn
        updateSSMParameterArn: !GetAtt UpdateSSMParameterFunction.Arn
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref CheckRestoreStatusFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref RestoreBackupFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref UpdateSSMParameterFunction
  
  CheckRestoreStatusFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: functions/check-restore-status/
      Handler: check-restore-status
      Policies:
        - DynamoDBReadPolicy:
            TableName: "*"

  RestoreBackupFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: functions/restore-backup/
      Handler: restore-backup
      Role:
        !GetAtt RestoreBackupFunctionRole.Arn

  UpdateSSMParameterFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: functions/update-ssm-parameter/
      Handler: update-ssm-parameter
      Role:
        !GetAtt UpdateSSMParameterFunctionRole.Arn

# IAM Roles
  RestoreBackupFunctionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - !Sub lambda.amazonaws.com
            Action: "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: RestoreBackupFunctionExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "dynamodb:BatchWriteItem"
                  - "dynamodb:DeleteItem"
                  - "dynamodb:GetItem"
                  - "dynamodb:PutItem"
                  - "dynamodb:Query"
                  - "dynamodb:RestoreTableFromBackup"
                  - "dynamodb:Scan"
                  - "dynamodb:UpdateItem"
                Resource:
                  - "*"

  UpdateSSMParameterFunctionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - !Sub lambda.amazonaws.com
            Action: "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: UpdateSSMParameterFunctionExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ssm:PutParameter"
                Resource:
                  - "*"

Outputs:
  StartStateMachineFunction:
    Description: "StartStateMachine Lambda Function ARN"
    Value:
      !GetAtt StartStateMachineFunction.Arn
